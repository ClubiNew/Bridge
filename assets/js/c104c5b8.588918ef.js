"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[609],{3905:function(e,r,t){t.d(r,{Zo:function(){return p},kt:function(){return d}});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=n.createContext({}),s=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},p=function(e){var r=s(e.components);return n.createElement(l.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=s(t),d=o,f=m["".concat(l,".").concat(d)]||m[d]||u[d]||a;return t?n.createElement(f,i(i({ref:r},p),{},{components:t})):n.createElement(f,i({ref:r},p))}));function d(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var c={};for(var l in r)hasOwnProperty.call(r,l)&&(c[l]=r[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=t[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},19747:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return p},default:function(){return m}});var n=t(87462),o=t(63366),a=(t(67294),t(3905)),i=["components"],c={sidebar_position:3},l="Memory Tracking",s={unversionedId:"memory",id:"memory",isDocsHomePage:!1,title:"Memory Tracking",description:"Bridge sets debugger memory categories so that you can track down memory leaks in your code.",source:"@site/docs/memory.md",sourceDirName:".",slug:"/memory",permalink:"/Bridge/docs/memory",editUrl:"https://github.com/ClubiNew/Bridge/edit/master/docs/memory.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"defaultSidebar",previous:{title:"Installation",permalink:"/Bridge/docs/installation"}},p=[],u={toc:p};function m(e){var r=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"memory-tracking"},"Memory Tracking"),(0,a.kt)("p",null,"Bridge sets ",(0,a.kt)("a",{parentName:"p",href:"https://developer.roblox.com/en-us/api-reference/lua-docs/debug"},"debugger")," memory categories so that you can track down memory leaks in your code."),(0,a.kt)("p",null,"Before calling the ",(0,a.kt)("inlineCode",{parentName:"p"},":OnInit()")," and ",(0,a.kt)("inlineCode",{parentName:"p"},":OnStart()")," methods of ",(0,a.kt)("a",{parentName:"p",href:"/api/ServiceManager#Service"},"services"),", the memory category will be set to ",(0,a.kt)("inlineCode",{parentName:"p"},"NAME_Init")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"NAME_Start")," respectively, where ",(0,a.kt)("inlineCode",{parentName:"p"},"NAME")," is the service name."),(0,a.kt)("p",null,"This means you can easily and accurately determine memory usage for a service by opening the ",(0,a.kt)("a",{parentName:"p",href:"https://developer.roblox.com/en-us/articles/Developer-Console"},"developer console"),", navigating to the memory tab, selecting client or server, and then searching the name of your service."))}m.isMDXComponent=!0}}]);